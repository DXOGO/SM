clear all
clc
%% Considere o seguinte sinal, composto por uma componente determin√≠stica (sinusoidede 1 Hz) e uma outra estoc√°stica ( ùëü(ùë°) ):   

%                                                   ùë•(ùë°) = sin(2ùúãùë°) + ùëü(ùë°)

% O sinal de ru√≠do ùëü(ùë°) √© gerado pela seguinte express√£o:   ---->     ùëü(ùë°) = 0.5*sin(20ùúãùë° + 10*ùúô1(ùë°)) + 0.5*sin(24ùúãùë° + 10*ùúô2(ùë°))

% onde ùúôùëò(ùë°), ùëò = 1,2, √© o resultado da integra√ß√£o (ao longo do tempo) de uma vari√°vel aleat√≥ria de :
    % - distribui√ß√£o normal
    % - m√©dia nula 
    % - desvio padr√£o igual a ùúã.

% Crie a fun√ß√£o [ùê±,ùê≠] = ùëÆùíÜùíìùíÇùë∫ùíäùíèùíÇùíç(ùëÅ, ùëáùëé):
    % - gera a sequ√™ncia de ùëÅ amostras do sinal definido anteriormente ( x(t) )
    % - considera o per√≠odo de amostragem ùëáùëé
    % - devolve no vetor ùê± os valores das amostras
    % - devolve no vetor ùê≠ os respetivos instantes de tempo 
    % - a fun√ß√£o dever√°, tamb√©m, representar num gr√°fico o sinal criado.


%                                          |...|-> matriz Nx1           ^ x(t)
% rn = random('normal',0,pi,N,1)                              |
%                                    | |                                       |
%                                    | > desvio padr√£o              |
%                                    |                                         |
%                                   m√©dia                                 |     <-- Ta -->
%                                                                             |-----------------------> t
%                                                                                   |              |
%                                                                                 k-1            k
%       w(k) = w(k-1) + (( x(k) + x(k-1) ) / 2 ) * Ta        w(k-1)        w(k)

Ta = 0.001;     % periodo de amostragem
N = 1e4;         % n¬∫ de amostras

% ex 01)
[x,t] = GeraSinal(N,Ta);

%% ex 02) Usando a fun√ß√£o Espetro (criada na Aula 04), observe o espetro do sinal gerado na pergunta anterior. 
% Observe como varia o espetro de diferentes realiza√ß√µes desse sinal, e conclua sobre a localiza√ß√£o na frequ√™ncia das 
% componentes (determin√≠stica e ru√≠do) desse sinal.

[X,f] = Espetro(x,Ta,0,55);

%% ex 03) Com base no que observou na al√≠nea anterior, desenvolva um filtro a ser aplicado sobre o espetro
% que permita filtrar (i.e. reduzir ou eliminar) a componente de ru√≠do associada ao sinal gerado na quest√£o 1.
% Aplique esse filtro e, usando a fun√ß√£o Reconstroi (tamb√©m desenvolvida na Aula 04), obtenha o sinal filtrado no dom√≠nio do tempo e visualize-o

H = zeros(size(x));
fc = 3;

H( (f>-fc) & (f<fc) ) = 1;    %         1 ‚Üí entre -fc e fc          ‚Üí 0 no resto        queremos qd √© 1
% tmb pode ser >> H(f>-fc)=1; H(f>fc)=0;

Y = H.*X;
figure(66);
[y,t] = Reconstroi(Y,f);
plot(t,x,t,y);          % mostrar o sinal do ex01 (a azul) e o sinal reconstruido (a vermelho)
legend("fun√ß√£o de GeraSinal","fun√ß√£o de Reconstroi");

%% ex 04) Repita a al√≠nea anterior, criando agora um filtro que permita obter apenas a
% componente de ru√≠do do sinal gerada na quest√£o 1. Aplique esse filtro e observe, no
% dom√≠nio do tempo, o sinal de ru√≠do gerado por este processo de filtragem

G = 1 - H;      % em vez de filtrar a componente de ruido faz o oposto, permite S√ì ver essa componete

Z = G.*X;
figure(88);
[z,t] = Reconstroi(Z,f);
%plot(t,x,t,z);  % mostrar o sinal do ex01 (a azul) e o sinal reconstruido (a vermelho)


%% pergunta 5
ps=sum(Y.^2)/length(Y); % signal (s)
pn=sum(Z.^2)/length(Z); % noise (n)
snr = 10*log10(ps/pn);
fprintf('SNR = %.3f dB\n',snr);
